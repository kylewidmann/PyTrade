[tool.poetry]
name = "pytrade"
version = "0.1.0"
description = ""
authors = ["Kyle Widmann <Kyle.Widmann@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
pytest = "^8.1.1"
numpy = "^1.26.4"
pandas = "^2.2.2"
pandas-stubs = "^2.2.2.240603"
backtesting = "^0.3.3"
multimethod = "^1.12"
autoflake = "^2.3.1"


[tool.poetry.group.dev.dependencies]
pytest = "^8.1.1"
pytest-cov = "^4.1.0"
bandit = "^1.7.8"
flake8 = "^7.0.0"
black = "^24.3.0"
isort = "^5.13.2"
mypy = "^1.9.0"
pytest-benchmark = "^4.0.0"
pytest-asyncio = "^0.23.7"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"

[tool.coverage.report]
# Regexes for lines to exclude from considerationm
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
]
omit = [
    "pytrade/interfaces/*",
    "pytrade/events/*"
]

